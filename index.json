[
{
	"uri": "/",
	"title": "Keleustes",
	"tags": [],
	"description": "Main page",
	"content": " Keleustes Rationale  The projects listed here are POC intended to help make educated decisions for the implementation of OpenInfrastructure Airship project. None of thoses POC aimed at replacing for airship components. Those POC merely aim at highlighting the potential advantages and pitfalls of choosing one technology versus another.  Airship Design  Airship OpenDiscussion Specs Governance  Airship Implementation  airship treasuremap pegleg spyglass shipyard armada deckhand drydock promenade divingbell maas  Openstack Helm  openstackhelm openstackhelm openstackhelm openstack  "
},
{
	"uri": "/post/",
	"title": "Latest News",
	"tags": [],
	"description": "",
	"content": " Posts Convertion to new HUGO is still WIP\n"
},
{
	"uri": "/kustomize/",
	"title": "Kustomize",
	"tags": [],
	"description": "This is the keleustes kustomize POC page",
	"content": "Kustomize Rationale  Investigate the feasibility of converting deckhand functions to kustomize. For that purpose improvments have been made and proposed to the kustomize community. CRD have been created and added to the underlying Kubernetes Cluster. Note that using CRDs does not force the Airship architecture to migrate to operator architecture immediatly. Some efforts has been spent into getting the OpenAPIV3Schema in the deploy/crds/xxx.yaml to be as accurate as possible. This helps getting kubectl version syntax verification. Still the real syntax check will be performed into helmv3 since it verifies the syntax of the values obtained from layering the \u0026ldquo;override\u0026rdquo; values on top of the \u0026ldquo;default\u0026rdquo; values provided in the chart. This is not a \u0026ldquo;replacement\u0026rdquo; for airship deckhand. This POC merely aims at highlighting the potential advantages and pitfall in going in that direction.  Lessons Learned Layering  TBD  Substitutions  TBD  Documentation  ReadTheDocs Readme  Associated GIT Repos  kustomize airship-deckhand  \n"
},
{
	"uri": "/armada-operator/",
	"title": "Armada",
	"tags": [],
	"description": "This is the keleustes armada-operator POC page",
	"content": "Armada Rationale  Investigate the feasibility of converting airship-armada functions into a Kubernetes operator pattern. This is not a \u0026ldquo;replacement\u0026rdquo; for airship armada. This POC merely aims at highlighting the potential advantages and pitfall in going in that direction.  Lessons Learned CRD usages  Schema validation: TBD DeepCopy and structured types in golang: TBD  Operator Usage  Kubernetes Event Handling: TBD RBAC Implication: TBD Deployment of the operator itself: TBD  HelmV2 vs HelmV3  Tiller dependency: TBD Helm Golang code dependency: TBD  Multithreading and Concurrency  One Armada Operator per namespace: TBD  Underlying resource state management One of the key feature of armada is to be able to figure if the resources deployed through helm install or helm upgrade are ready to be used.\nDocumentation  ReadTheDocs Readme  Associated GIT Repos  armada-operator airship-armada  \n"
},
{
	"uri": "/airship-treasuremap/",
	"title": "TreasureMap",
	"tags": [],
	"description": "This is the keleustes treasuremap POC page",
	"content": "TreasureMap Rationale  Investigate the feasibility of converting airship-treasuremap site descriptions into kustomize site descriptions (Kubernetes CRD based). The kustomize layering are beeing leverage (global, type, site). This is not a \u0026ldquo;replacement\u0026rdquo; for airship treasuremap. This POC merely aims at highlighting what would have to be done to adapt treasuremap to tools such as kustomize, argo\u0026hellip;  Lessons Learned Layering  TBD  Substitutions  TBD  Schema Validation  TBD  Documentation  ReadTheDocs Readme  Associated GIT Repos  airship-treasuremap airship-treasuremap  \n"
},
{
	"uri": "/oslc-operator/",
	"title": "LifeCycle Manager",
	"tags": [],
	"description": "This is keleustes OpenstackService LifeCycle operator POC",
	"content": "OpenstackLCM Rationale  Create a Kubernetes Operator able to orchestrate draining traffic, upgrading, testing, traffic rollout\u0026hellip; The main lesson learned from this POC is the ability to use the helm rendering to provide a unified way of delivering scripts onto a platform and at runtime selectively decide which part of the chart to render according to the state of the service which lifecycle may not match exactly the lifecycle of a helm chart (i.e install, upgrade, rollback, delete).  Lessons Learned Multi facet charts  TBD  Traffic Draining  TBD  ScaleUp / ScaleDown  TBD  Documentation  Readme  Associated GIT Repos  oslc-operator  \n"
},
{
	"uri": "/cluster-api/",
	"title": "Cluster-API",
	"tags": [],
	"description": "This is the keleustes cluyster-api POC page",
	"content": "Cluster API Rationale  This POC of a baremetal cluster-api provider was started before the official cluster-api-provider-baremetal This POC was relying on Airship Drydock/Maas. Thanks to the work done by the the metal3.io team, most of that this POC has become irrelevant. The remaining questions that can be kind of answered by this POC are:  Is DivingBell still relevant. Is the cluster-api in charge of updating, rebooting machines when the machine specs are updated. How much of Promenade is still relevant. cluster-api indeed helping to save the kubeadm token into configmaps to help machine to join. Can kustomize be used to build the cluster-api MachineList and Cluster CRDs from Airship Site definitions.  This is not a \u0026ldquo;replacement\u0026rdquo; for airship drydock. This POC merely aims at highlighting the potential advantages and pitfall in going in that direction.  Lessons Learned Baremetal machine greenfield deployment  TBD  Baremetal machine brownfield upgrade and update  Docker, Kubelet: TBD OS: TBD  Kubernetes state maintenance  kubeproxy, api-server,\u0026hellip;: TBD  Documentation  TBD  Associated GIT Repos  cluster-api cluster-api-provider-baremetal cluster-api-provider-airship  \n"
},
{
	"uri": "/kubeadm/",
	"title": "Kubeadm",
	"tags": [],
	"description": "This is the kubeadm POC page",
	"content": "Kubeadm Rationale  Investigate the feasibility of converting promenade functions to kubeadm. For that purpose improvments have been made and proposed to the kubeadm community. This is not a \u0026ldquo;replacement\u0026rdquo; for airship promenade. This POC merely aims at highlighting the potential advantages and pitfall in going in that direction.  Lessons Learned Layering  TBD  Substitutions  TBD  Documentation  ReadTheDocs Readme  Associated GIT Repos  kubeadm airship-promenade  \n"
},
{
	"uri": "/argo/",
	"title": "Argo",
	"tags": [],
	"description": "This is the keleustes argo POC page",
	"content": "Argo Rationale  Investigate the feasibility of converting shipyard functions to argo. For that purpose improvments have been made and proposed to the argo community. This is not a \u0026ldquo;replacement\u0026rdquo; for airship shipyard. This POC merely aims at highlighting the potential advantages and pitfall in going in that direction.  Lessons Learned Workflow  TBD  Documentation  ReadTheDocs Readme  Associated GIT Repos  argo airship-shipyard  \n"
},
{
	"uri": "/about/",
	"title": "About KELEUSTES",
	"tags": [],
	"description": "",
	"content": " About WIP\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]